name: Docker Build, Push and Healthcheck

on:
  workflow_dispatch:
  push:
    branches: [ main, cinema ]
    paths:
      - 'src/**'
      - '.github/workflows/docker-build-push.yml'
      - 'Dockerfile*'
      - 'docker-compose*'
      - 'tests/*'
      - '.github/workflows/*'
  release:
    types: [published]

env:
  REGISTRY: ghcr.io
  MONOLITH_IMAGE_NAME: ${{ github.repository }}/monolith
  MOVIES_SERVICE_IMAGE_NAME: ${{ github.repository }}/movies-service
  EVENTS_SERVICE_IMAGE_NAME: ${{ github.repository }}/events-service
  PROXY_SERVICE_IMAGE_NAME: ${{ github.repository }}/proxy-service

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    strategy:
      matrix:
        platform: [ 'linux/amd64', 'linux/arm64' ]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # --- Build & push images ---
      - name: Build and push Monolith
        uses: docker/build-push-action@v4
        with:
          platforms: ${{ matrix.platform }}
          context: ./src/monolith
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.MONOLITH_IMAGE_NAME }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push Movies Service
        uses: docker/build-push-action@v4
        with:
          platforms: ${{ matrix.platform }}
          context: ./src/microservices/movies
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.MOVIES_SERVICE_IMAGE_NAME }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push Events Service
        uses: docker/build-push-action@v4
        with:
          platforms: ${{ matrix.platform }}
          context: ./src/microservices/events
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.EVENTS_SERVICE_IMAGE_NAME }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push Proxy Service
        uses: docker/build-push-action@v4
        with:
          platforms: ${{ matrix.platform }}
          context: ./src/microservices/proxy
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.PROXY_SERVICE_IMAGE_NAME }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # --- Deploy via Docker Compose ---
      - name: Deploy with Docker Compose
        run: |
          docker-compose -f docker-compose.yml pull
          docker-compose -f docker-compose.yml up -d

      # --- Wait for services to become healthy ---
      - name: Wait for services health
        run: |
          for i in {1..30}; do
            unhealthy=$(docker compose ps -a --format json | jq -s '[.[][] | select(.State.Health? and .State.Health.Status != "healthy")]')
            if [ "$(echo $unhealthy | jq length)" -eq 0 ]; then
              echo "All services are healthy!"
              exit 0
            fi
            echo "Waiting for services..."
            sleep 5
          done
          echo "Some services failed to become healthy"
          docker compose ps
          exit 1
