name: API Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: cinema
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: cd tests/postman && npm install

      - name: Start services
        run: docker compose up -d --build

      - name: Wait for services to be healthy
        run: |
          for i in {1..30}; do
            unhealthy=$(docker compose ps --format json | jq -r '.[] | select(.Health!="healthy")')
            if [ -z "$unhealthy" ]; then
              echo "All services are healthy!"
              exit 0
            fi
            echo "Waiting for services..."
            sleep 5
          done
          echo "Services failed to become healthy"
          docker compose ps
          exit 1

      - name: Run tests
        run: cd tests/postman && npm test
