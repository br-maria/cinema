name: Docker Build, Test and Push

on:
  push:
    branches: [ main ]
    paths:
      - 'src/**'
      - 'docker-compose.yml'
      - '.github/workflows/docker-build-push.yml'
  release:
    types: [published]

env:
  REGISTRY: ghcr.io
  IMAGE_NAMESPACE: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Собираем и пушим образы (примерно под каждую службу)
      - name: Build & Push proxy-service
        uses: docker/build-push-action@v6
        with:
          context: ./src/microservices/proxy
          push: true
          tags: |
            ghcr.io/${{ env.IMAGE_NAMESPACE }}/proxy-service:sha-${{ github.sha }}
            ghcr.io/${{ env.IMAGE_NAMESPACE }}/proxy-service:latest

      - name: Build & Push events-service
        uses: docker/build-push-action@v6
        with:
          context: ./src/microservices/events
          push: true
          tags: |
            ghcr.io/${{ env.IMAGE_NAMESPACE }}/events-service:sha-${{ github.sha }}
            ghcr.io/${{ env.IMAGE_NAMESPACE }}/events-service:latest

      - name: Build & Push monolith-service
        uses: docker/build-push-action@v6
        with:
          context: ./src/monolith
          push: true
          tags: |
            ghcr.io/${{ env.IMAGE_NAMESPACE }}/monolith-service:sha-${{ github.sha }}
            ghcr.io/${{ env.IMAGE_NAMESPACE }}/monolith-service:latest

      - name: Build & Push movies-service
        uses: docker/build-push-action@v6
        with:
          context: ./src/microservices/movies
          push: true
          tags: |
            ghcr.io/${{ env.IMAGE_NAMESPACE }}/movies-service:sha-${{ github.sha }}
            ghcr.io/${{ env.IMAGE_NAMESPACE }}/movies-service:latest

      # (Не обязательно, но полезно) Сохранить метаданные/манифесты как артефакты job'а
      - name: Upload build metadata
        uses: actions/upload-artifact@v4
        with:
          name: images-meta
          path: |
            **/Dockerfile
            docker-compose.yml
